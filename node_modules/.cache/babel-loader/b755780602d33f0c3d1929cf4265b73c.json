{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ben\\\\Downloads\\\\Web Dev\\\\MKCharts\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport resultService from './services/results';\nimport { useField } from \"./hooks/index.js\";\nimport './App.css';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResultInput = ({\n  date,\n  newDate,\n  winner,\n  second,\n  third,\n  fourth,\n  players,\n  setPlayers,\n  results,\n  setResults\n}) => {\n  const numPlayers = ['2', '3', '4'];\n  const playerNames = ['Abriel', 'Avery', 'Benny', 'Kelven', 'Mihir'];\n\n  const getId = () => (100000 * Math.random()).toFixed(0);\n\n  const asObject = (date, players, winner) => {\n    return {\n      date,\n      players,\n      winner,\n      id: getId()\n    };\n  };\n\n  const addResult = event => {\n    event.preventDefault();\n    const newResult = asObject(date, players, winner.value);\n    resultService.postResult(newResult).then(setResults(results.concat(newResult)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add New Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addResult,\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          margin: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"# of Players:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n                className: \"mb-2\",\n                name: \"players\",\n                children: numPlayers.map((r, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n                  id: `radio-${idx}`,\n                  type: \"radio\",\n                  variant: \"secondary\",\n                  name: \"radio\",\n                  value: r,\n                  checked: players === r ? \"checked\" : \"\",\n                  onChange: ({\n                    target\n                  }) => {\n                    setPlayers(target.value);\n                  },\n                  children: r\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Winner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", { ...winner\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Second\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", { ...second\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Third\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", { ...third\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Fourth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", { ...fourth\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"roomates\",\n            children: playerNames.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: p\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"date\",\n                type: \"date\",\n                id: \"date\",\n                value: date,\n                onChange: ({\n                  target\n                }) => newDate(target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"secondary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ResultInput;\n\nconst RecentGames = ({\n  results\n}) => {\n  _s();\n\n  let [recentResults, setRecentResults] = useState([]);\n  const sortedResults = results.sort((a, b) => {\n    var dateA = new Date(a.date);\n    var dateB = new Date(b.date);\n    return dateB - dateA;\n  });\n  useEffect(() => {\n    setRecentResults(sortedResults.slice(0, 5));\n  }, [results]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recent Races\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: recentResults.map(g => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: `Winner: ${g.winner}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this), \" \", ` - Game on ${g.date}`]\n        }, g.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecentGames, \"LXvynXGrkmmhk0dRJ4mVFh1frCs=\");\n\n_c2 = RecentGames;\n\nconst App = () => {\n  _s2();\n\n  const [results, setResults] = useState([]);\n  const [date, newDate] = useState('');\n  const [players, setPlayers] = useState('4');\n  const winner = useField('winner', players);\n  const second = useField('second', players);\n  const third = useField('third', players);\n  const fourth = useField('fourth', players);\n  console.log(\"results\", results);\n  useEffect(() => {\n    resultService.getAll().then(res => setResults(res));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      style: {\n        backgroundColor: \"red\",\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"KABAM MKCharts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(ResultInput, {\n          date: date,\n          newDate: newDate,\n          winner: winner,\n          second: second,\n          third: third,\n          fourth: fourth,\n          players: players,\n          setPlayers: setPlayers,\n          results: results,\n          setResults: setResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(RecentGames, {\n          results: results\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 7\n  }, this);\n};\n\n_s2(App, \"qXx7rDNVmyS4CicoRydnJajBEWE=\", false, function () {\n  return [useField, useField, useField, useField];\n});\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ResultInput\");\n$RefreshReg$(_c2, \"RecentGames\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["C:/Users/Ben/Downloads/Web Dev/MKCharts/src/App.js"],"names":["React","useState","useEffect","resultService","useField","ToggleButton","ToggleButtonGroup","Button","ResultInput","date","newDate","winner","second","third","fourth","players","setPlayers","results","setResults","numPlayers","playerNames","getId","Math","random","toFixed","asObject","id","addResult","event","preventDefault","newResult","value","postResult","then","concat","margin","textAlign","map","r","idx","target","p","padding","RecentGames","recentResults","setRecentResults","sortedResults","sort","a","b","dateA","Date","dateB","slice","g","App","console","log","getAll","res","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport resultService from './services/results'\r\nimport { useField } from \"./hooks/index.js\"\r\n\r\nimport './App.css';\r\n\r\nimport ToggleButton from 'react-bootstrap/ToggleButton'\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst ResultInput = ({\r\ndate, newDate, winner, second, third, fourth, \r\nplayers, setPlayers,results, setResults}) => {\r\n\r\n  const numPlayers = ['2','3','4']\r\n  const playerNames = ['Abriel','Avery','Benny','Kelven','Mihir']\r\n\r\n  const getId = () => (100000 * Math.random()).toFixed(0)\r\n  const asObject = (date, players, winner) => {\r\n    return {\r\n      date,\r\n      players,\r\n      winner,\r\n      id: getId()\r\n    }\r\n  }\r\n\r\n  const addResult = (event) => {\r\n    event.preventDefault()\r\n\r\n    const newResult = asObject(date, players, winner.value)\r\n    resultService.postResult(newResult)\r\n      .then(setResults(results.concat(newResult)))\r\n  }\r\n  \r\n  return(\r\n    <div>\r\n      <h3>Add New Results</h3>\r\n        <form onSubmit={addResult}>\r\n          <table style={{margin: 'auto'}}>\r\n            <tbody>\r\n              <tr>\r\n                  <td># of Players:</td>\r\n                  <td style={{textAlign: 'center'}}>\r\n                    <ToggleButtonGroup className=\"mb-2\" name=\"players\">\r\n                      {numPlayers.map((r, idx) => (\r\n                        <ToggleButton\r\n                          key={idx}\r\n                          id={`radio-${idx}`}\r\n                          type=\"radio\"\r\n                          variant=\"secondary\"\r\n                          name=\"radio\"\r\n                          value={r}\r\n                          checked={players === r ? \"checked\" : \"\"}\r\n                          onChange={({target})=>{\r\n                            setPlayers(target.value)}}\r\n                        >\r\n                        {r}\r\n                        </ToggleButton>\r\n                    ))}\r\n                    </ToggleButtonGroup>\r\n                  </td>\r\n              </tr>\r\n\r\n                  <tr>\r\n                    <td>Winner</td>\r\n                    <td><input {...winner}/></td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Second</td>\r\n                    <td><input {...second}/></td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Third</td>\r\n                    <td >\r\n                    <input \r\n                    {...third}\r\n                    />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Fourth</td>\r\n                    <td><input {...fourth}/></td>\r\n                  </tr>\r\n                            \r\n\r\n                  <datalist id=\"roomates\">\r\n                      {playerNames.map(p => (\r\n                        <option value={p}/>\r\n                      ))}\r\n                    </datalist>\r\n              <tr>\r\n                <td>Date:</td>\r\n                <td>\r\n                  <input\r\n                    name=\"date\"\r\n                    type=\"date\"\r\n                    id='date'\r\n                    value={date}\r\n                    onChange={({target})=>newDate(target.value)}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <div style={{textAlign: 'center', padding:'10px'}}><Button type=\"submit\" variant=\"secondary\">Submit</Button></div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst RecentGames = ({results}) => {\r\n  let [recentResults, setRecentResults] = useState([]) \r\n\r\n  const sortedResults = results.sort((a, b) => {\r\n    var dateA = new Date(a.date);\r\n    var dateB = new Date(b.date);\r\n    return dateB - dateA;\r\n  })\r\n\r\n  useEffect(()=>{\r\n    setRecentResults(sortedResults.slice(0,5))\r\n  },[results]) \r\n  \r\n  return(\r\n    <div>\r\n      <h3>Recent Races</h3>\r\n      <div style={{textAlign:'center'}}>\r\n        {\r\n          recentResults.map(g =>{\r\n            return(\r\n              <div key={g.id}>\r\n                <b>{`Winner: ${g.winner}`}</b> {` - Game on ${g.date}`}\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [results, setResults] = useState([])\r\n  const [date, newDate] = useState('') \r\n  const [players, setPlayers] = useState('4') \r\n\r\n  const winner = useField('winner', players)\r\n  const second = useField('second', players)\r\n  const third = useField('third', players)\r\n  const fourth = useField('fourth', players)\r\n\r\n  console.log(\"results\", results);\r\n\r\n  useEffect(()=>{\r\n    resultService.getAll()\r\n      .then(res => setResults(res))\r\n  },[])\r\n\r\n  return (\r\n      <div className=\"container\" >\r\n        <div className='row' style={{backgroundColor:\"red\", textAlign: 'center'}}>\r\n          <h2>KABAM MKCharts</h2>\r\n        </div>\r\n        <div className='row' >\r\n          <div className='col' >\r\n            <ResultInput\r\n              date={date}\r\n              newDate={newDate}\r\n              winner={winner}\r\n              second = {second}\r\n              third = {third}\r\n              fourth = {fourth}\r\n              players={players}\r\n              setPlayers={setPlayers}\r\n              results={results}\r\n              setResults={setResults}\r\n            />\r\n          </div>\r\n          <div className='col'>\r\n            <RecentGames\r\n              results={results}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}