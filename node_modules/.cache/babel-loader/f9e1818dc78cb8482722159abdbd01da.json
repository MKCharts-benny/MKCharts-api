{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ben\\\\Downloads\\\\Web Dev\\\\MKCharts\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport resultService from './services/results';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResultInput = ({\n  date,\n  newDate,\n  winner,\n  setWinner,\n  players,\n  setPlayers,\n  setResults\n}) => {\n  const getId = () => (100000 * Math.random()).toFixed(0);\n\n  const asObject = (date, players, winner) => {\n    return {\n      date,\n      players,\n      winner,\n      id: getId()\n    };\n  };\n\n  const addResult = event => {\n    event.preventDefault();\n    const newResult = asObject(date, players, winner);\n    resultService.postResult(newResult).then(resultService.getAll()).then(res => setResults(res));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addResult,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Winner:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"winner\",\n          type: \"text\",\n          list: \"roomates\",\n          id: \"winner\",\n          value: winner,\n          onChange: ({\n            target\n          }) => setWinner(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"roomates\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Benny\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Kelven\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Mihir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Abriel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Avery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"# of Players\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"players\",\n          id: \"players\",\n          list: \"playerCount\",\n          value: players,\n          onChange: ({\n            target\n          }) => setPlayers(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"playerCount\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"date\",\n          type: \"date\",\n          id: \"date\",\n          value: date,\n          onChange: ({\n            target\n          }) => newDate(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ResultInput;\n\nconst App = () => {\n  _s();\n\n  const [results, setResults] = useState([]);\n  const [winner, setWinner] = useState('');\n  const [date, newDate] = useState('');\n  const [players, setPlayers] = useState('');\n  useEffect(() => {\n    resultService.getAll().then(res => setResults(res));\n  }, []);\n\n  const RecentGames = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Most Recent Winners\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), results.map(g => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: `${g.winner}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), \" \", ` - Game on ${g.date}`]\n        }, g.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to MKCharts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ResultInput, {\n        date: date,\n        newDate: newDate,\n        winner: winner,\n        setWinner: setWinner,\n        players: players,\n        setPlayers: setPlayers,\n        setResults: setResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(RecentGames, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"B1zmPDf/ZJT+ZJIfipZ8YLXZYv4=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ResultInput\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/Ben/Downloads/Web Dev/MKCharts/src/App.js"],"names":["React","useState","useEffect","resultService","ResultInput","date","newDate","winner","setWinner","players","setPlayers","setResults","getId","Math","random","toFixed","asObject","id","addResult","event","preventDefault","newResult","postResult","then","getAll","res","target","value","App","results","RecentGames","map","g"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport resultService from './services/results'\n\nconst ResultInput = ({date, newDate, winner, setWinner, players, setPlayers, setResults}) => {\n  const getId = () => (100000 * Math.random()).toFixed(0)\n  const asObject = (date, players, winner) => {\n    return {\n      date,\n      players,\n      winner,\n      id: getId()\n    }\n  }\n\n  const addResult = (event) => {\n    event.preventDefault()\n\n    const newResult = asObject(date, players, winner)\n    resultService.postResult(newResult)\n      .then(resultService.getAll())\n      .then(res => setResults(res))\n  }\n  \n  return(\n    <div>\n      <h2>Add New Results</h2>\n      <form onSubmit={addResult}>\n        <div>\n          Winner:\n          <input \n            name=\"winner\"\n            type=\"text\"\n            list=\"roomates\"\n            id='winner' \n            value={winner} \n            onChange={({target})=>setWinner(target.value)}\n          />\n          <datalist id=\"roomates\">\n              <option value=\"Benny\"/>\n              <option value=\"Kelven\"/>\n              <option value=\"Mihir\"/>\n              <option value=\"Abriel\"/>\n              <option value=\"Avery\"/>\n          </datalist>\n          </div>\n          \n          <div>\n          # of Players\n            <input \n              name=\"players\"\n              id='players' \n              list='playerCount'\n              value={players} \n              onChange={({target})=>setPlayers(target.value)}\n            />\n            <datalist id=\"playerCount\">\n              <option value='2'/>\n              <option value='3'/>\n              <option value='4'/>\n            </datalist>\n        </div>\n        <div>\n          Date: \n          <input \n            name=\"date\"\n            type=\"date\"\n            id='date' \n            value={date} \n            onChange={({target})=>newDate(target.value)}\n          />\n        </div>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [results, setResults] = useState([]) \n  const [winner, setWinner] = useState('') \n  const [date, newDate] = useState('') \n  const [players, setPlayers] = useState('') \n\n  useEffect(()=>{\n    resultService.getAll()\n      .then(res => setResults(res))\n  },[])\n\n  const RecentGames = () => {\n    return(\n      <div>\n        <h2>Most Recent Winners</h2>\n        {\n          results.map(g =>{\n            return(\n              <div key={g.id}>\n                <b>{`${g.winner}`}</b> {` - Game on ${g.date}`}\n              </div>\n            )\n          })\n        }\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h2>Welcome to MKCharts</h2>\n      <div>\n        <ResultInput\n          date={date}\n          newDate={newDate}\n          winner={winner}\n          setWinner={setWinner}\n          players={players}\n          setPlayers={setPlayers}\n          setResults={setResults}\n        />\n      </div>\n      <div>\n        <RecentGames/>\n      </div>\n    </div>\n  )\n\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}