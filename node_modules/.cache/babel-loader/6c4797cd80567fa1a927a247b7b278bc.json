{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ben\\\\Downloads\\\\Web Dev\\\\MKCharts\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport resultService from './services/results';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResultInput = ({\n  date,\n  newDate,\n  winner,\n  setWinner,\n  players,\n  setPlayers,\n  results,\n  setResults\n}) => {\n  const getId = () => (100000 * Math.random()).toFixed(0);\n\n  const asObject = (date, players, winner) => {\n    return {\n      date,\n      players,\n      winner,\n      id: getId()\n    };\n  };\n\n  const addResult = event => {\n    event.preventDefault();\n    const newResult = asObject(date, players, winner);\n    resultService.postResult(newResult).then(setResults(results.concat(newResult)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add New Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addResult,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Winner:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"winner\",\n          type: \"text\",\n          list: \"roomates\",\n          id: \"winner\",\n          value: winner,\n          onChange: ({\n            target\n          }) => setWinner(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"# of Players\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"players\",\n          id: \"players\",\n          list: \"playerCount\",\n          value: players,\n          onChange: ({\n            target\n          }) => setPlayers(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"date\",\n          type: \"date\",\n          id: \"date\",\n          value: date,\n          onChange: ({\n            target\n          }) => newDate(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"roomates\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Benny\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Kelven\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Mihir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Abriel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Avery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"playerCount\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ResultInput;\n\nconst RecentGames = ({\n  results\n}) => {\n  const sortedResults = results.sort((a, b) => {\n    var dateA = new Date(a.date);\n    var dateB = new Date(b.date);\n    return dateB - dateA;\n  });\n  const lastFiveResults = sortedResults.slice(0, 10);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recent Races\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), lastFiveResults.map(g => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: `${g.winner}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), \" \", ` - Game on ${g.date}`]\n      }, g.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = RecentGames;\n\nconst App = () => {\n  _s();\n\n  const [results, setResults] = useState([]);\n  const [winner, setWinner] = useState('');\n  const [date, newDate] = useState('');\n  const [players, setPlayers] = useState('');\n  useEffect(() => {\n    resultService.getAll().then(res => setResults(res));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to MKCharts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ResultInput, {\n        date: date,\n        newDate: newDate,\n        winner: winner,\n        setWinner: setWinner,\n        players: players,\n        setPlayers: setPlayers,\n        results: results,\n        setResults: setResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(RecentGames, {\n        results: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"B1zmPDf/ZJT+ZJIfipZ8YLXZYv4=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ResultInput\");\n$RefreshReg$(_c2, \"RecentGames\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["C:/Users/Ben/Downloads/Web Dev/MKCharts/src/App.js"],"names":["React","useState","useEffect","resultService","ResultInput","date","newDate","winner","setWinner","players","setPlayers","results","setResults","getId","Math","random","toFixed","asObject","id","addResult","event","preventDefault","newResult","postResult","then","concat","target","value","RecentGames","sortedResults","sort","a","b","dateA","Date","dateB","lastFiveResults","slice","map","g","App","getAll","res"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport resultService from './services/results'\n\nconst ResultInput = ({date, newDate, winner, setWinner, players, setPlayers, results, setResults}) => {\n  const getId = () => (100000 * Math.random()).toFixed(0)\n  const asObject = (date, players, winner) => {\n    return {\n      date,\n      players,\n      winner,\n      id: getId()\n    }\n  }\n\n  const addResult = (event) => {\n    event.preventDefault()\n\n    const newResult = asObject(date, players, winner)\n    resultService.postResult(newResult)\n      .then(setResults(results.concat(newResult)))\n  }\n  \n  return(\n    <div>\n      <h3>Add New Results</h3>\n      <form onSubmit={addResult}>\n        <div>\n          Winner:\n          <input \n            name=\"winner\"\n            type=\"text\"\n            list=\"roomates\"\n            id='winner' \n            value={winner} \n            onChange={({target})=>setWinner(target.value)}\n          />\n          </div>\n          <div>\n          # of Players\n            <input \n              name=\"players\"\n              id='players' \n              list='playerCount'\n              value={players} \n              onChange={({target})=>setPlayers(target.value)}\n            />\n        </div>\n        <div>\n          Date: \n          <input \n            name=\"date\"\n            type=\"date\"\n            id='date' \n            value={date} \n            onChange={({target})=>newDate(target.value)}\n          />\n        </div>\n        <button type=\"submit\">Submit</button>\n\n        <datalist id=\"roomates\">\n          <option value=\"Benny\"/>\n          <option value=\"Kelven\"/>\n          <option value=\"Mihir\"/>\n          <option value=\"Abriel\"/>\n          <option value=\"Avery\"/>\n        </datalist>\n        <datalist id=\"playerCount\">\n          <option value='2'/>\n          <option value='3'/>\n          <option value='4'/>\n        </datalist>\n      </form>\n    </div>\n  )\n}\n\nconst RecentGames = ({results}) => {\n  const sortedResults = results.sort((a, b) => {\n    var dateA = new Date(a.date);\n    var dateB = new Date(b.date);\n    return dateB - dateA;\n  })\n  const lastFiveResults = sortedResults.slice(0,10)\n\n  return(\n    <div>\n      <h3>Recent Races</h3>\n      {\n        lastFiveResults.map(g =>{\n          return(\n            <div key={g.id}>\n              <b>{`${g.winner}`}</b> {` - Game on ${g.date}`}\n            </div>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nconst App = () => {\n  const [results, setResults] = useState([]) \n  const [winner, setWinner] = useState('') \n  const [date, newDate] = useState('') \n  const [players, setPlayers] = useState('') \n\n  useEffect(()=>{\n    resultService.getAll()\n      .then(res => setResults(res))\n  },[])\n\n  return (\n    <div>\n      <h2>Welcome to MKCharts</h2>\n      <div>\n        <ResultInput\n          date={date}\n          newDate={newDate}\n          winner={winner}\n          setWinner={setWinner}\n          players={players}\n          setPlayers={setPlayers}\n          results={results}\n          setResults={setResults}\n        />\n      </div>\n      <div>\n        <RecentGames\n          results={results}\n        />\n      </div>\n    </div>\n  )\n\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}